{"ast":null,"code":"var _jsxFileName = \"/Users/mariamibrahim/Desktop/CSE186/asgn4/Assignment4/src/App.jsx\";\nimport React from 'react';\nimport Picker from './Picker';\nimport './App.css'; // https://www.youtube.com/watch?v=I9L0ZQfSF1U&ab_channel=HarithaComputers%26Technology\n\n/**\n * Simple component with no state.\n *\n * See the basic-react from lecture for an example of adding and\n * reacting to changes in state.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    this.set = () => {\n      // console.log(this.dateObj);\n      // const [month, day, year] = dateStr.split('/');\n      // this.dateObj = new Date(+year, +month - 1, +day);\n      // const obj = this.dateObj;\n      // console.log(obj);\n      this.child.current.setDate(this.dateObj);\n    };\n\n    this.child = /*#__PURE__*/React.createRef();\n    this.state = {\n      value: '',\n      buttonState: true\n    };\n    this.validate = this.validate.bind(this);\n    this.dateObj = {};\n  }\n  /**\n   * @param {object} event\n   */\n\n\n  validate(event) {\n    this.setState({\n      value: event.target.value\n    });\n    const dateregex = /^(0?[1-9]|1[0-2])\\/(0?[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/;\n    const dateStr = event.target.value;\n\n    if (!dateregex.test(dateStr)) {\n      this.setState({\n        buttonState: true\n      });\n    } // https://stackoverflow.com/questions/15196451/regular-expression-to-validate-datetime-format-mm-dd-yyyy\n\n\n    if (dateregex.test(dateStr)) {\n      // https://bobbyhadz.com/blog/javascript-convert-string-to-date-object#:~:\n      // text=Use%20the%20Date()%20constructor,\n      // and%20returns%20a%20Date%20object.&text=Copied!&text=We%20used%2\n      // 0the%20Date(), string%20to%20a%20Date%20object.\n      const [month, day, year] = dateStr.split('/');\n      this.dateObj = new Date(+year, +month - 1, +day);\n      console.log('hi');\n      this.setState({\n        buttonState: false\n      });\n    }\n  }\n  /**\n   *\n   */\n\n\n  /**\n   * @return {object} a <div> containing an <h2>\n   */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CSE186 Assignment 4 - React I\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Picker, {\n        ref: this.child\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"date\",\n        value: this.state.value,\n        onChange: this.validate,\n        placeholder: \"MM/DD/YYYY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"set\",\n        onClick: this.set,\n        disabled: this.state.buttonState,\n        children: \"Set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Picker","App","Component","constructor","set","child","current","setDate","dateObj","createRef","state","value","buttonState","validate","bind","event","setState","target","dateregex","dateStr","test","month","day","year","split","Date","console","log","render"],"sources":["/Users/mariamibrahim/Desktop/CSE186/asgn4/Assignment4/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport Picker from './Picker';\nimport './App.css';\n// https://www.youtube.com/watch?v=I9L0ZQfSF1U&ab_channel=HarithaComputers%26Technology\n/**\n * Simple component with no state.\n *\n * See the basic-react from lecture for an example of adding and\n * reacting to changes in state.\n */\nclass App extends React.Component {\n  /**\n   *\n   */\n  constructor() {\n    super();\n    this.child = React.createRef();\n    this.state = {value: '', buttonState: true};\n    this.validate = this.validate.bind(this);\n    this.dateObj = {};\n  }\n  /**\n   * @param {object} event\n   */\n  validate(event) {\n    this.setState({value: event.target.value});\n    const dateregex =\n    /^(0?[1-9]|1[0-2])\\/(0?[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/;\n    const dateStr = event.target.value;\n    if (!(dateregex.test(dateStr))) {\n      this.setState({buttonState: true});\n    }\n    // https://stackoverflow.com/questions/15196451/regular-expression-to-validate-datetime-format-mm-dd-yyyy\n    if (dateregex.test(dateStr)) {\n      // https://bobbyhadz.com/blog/javascript-convert-string-to-date-object#:~:\n      // text=Use%20the%20Date()%20constructor,\n      // and%20returns%20a%20Date%20object.&text=Copied!&text=We%20used%2\n      // 0the%20Date(), string%20to%20a%20Date%20object.\n      const [month, day, year] = dateStr.split('/');\n      this.dateObj = new Date(+year, +month - 1, +day);\n      console.log('hi');\n      this.setState({buttonState: false});\n    }\n  }\n  /**\n   *\n   */\n  set = ()=> {\n    // console.log(this.dateObj);\n    // const [month, day, year] = dateStr.split('/');\n    // this.dateObj = new Date(+year, +month - 1, +day);\n    // const obj = this.dateObj;\n    // console.log(obj);\n    this.child.current.setDate(this.dateObj);\n  };\n  /**\n   * @return {object} a <div> containing an <h2>\n   */\n  render() {\n    return (\n      <div>\n        <h2>CSE186 Assignment 4 - React I</h2>\n        <Picker ref={this.child} />\n        <input type ='text' id='date' value= {this.state.value}\n          onChange = {this.validate} placeholder=\"MM/DD/YYYY\"/>\n        <button type = \"submit\" id = \"set\" onClick={this.set}\n          disabled = {this.state.buttonState}>Set</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;EAChC;AACF;AACA;EACEC,WAAW,GAAG;IACZ;;IADY,KAiCdC,GAjCc,GAiCR,MAAK;MACT;MACA;MACA;MACA;MACA;MACA,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,KAAKC,OAAhC;IACD,CAxCa;;IAEZ,KAAKH,KAAL,gBAAaN,KAAK,CAACU,SAAN,EAAb;IACA,KAAKC,KAAL,GAAa;MAACC,KAAK,EAAE,EAAR;MAAYC,WAAW,EAAE;IAAzB,CAAb;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;IACA,KAAKN,OAAL,GAAe,EAAf;EACD;EACD;AACF;AACA;;;EACEK,QAAQ,CAACE,KAAD,EAAQ;IACd,KAAKC,QAAL,CAAc;MAACL,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;IAArB,CAAd;IACA,MAAMO,SAAS,GACf,2DADA;IAEA,MAAMC,OAAO,GAAGJ,KAAK,CAACE,MAAN,CAAaN,KAA7B;;IACA,IAAI,CAAEO,SAAS,CAACE,IAAV,CAAeD,OAAf,CAAN,EAAgC;MAC9B,KAAKH,QAAL,CAAc;QAACJ,WAAW,EAAE;MAAd,CAAd;IACD,CAPa,CAQd;;;IACA,IAAIM,SAAS,CAACE,IAAV,CAAeD,OAAf,CAAJ,EAA6B;MAC3B;MACA;MACA;MACA;MACA,MAAM,CAACE,KAAD,EAAQC,GAAR,EAAaC,IAAb,IAAqBJ,OAAO,CAACK,KAAR,CAAc,GAAd,CAA3B;MACA,KAAKhB,OAAL,GAAe,IAAIiB,IAAJ,CAAS,CAACF,IAAV,EAAgB,CAACF,KAAD,GAAS,CAAzB,EAA4B,CAACC,GAA7B,CAAf;MACAI,OAAO,CAACC,GAAR,CAAY,IAAZ;MACA,KAAKX,QAAL,CAAc;QAACJ,WAAW,EAAE;MAAd,CAAd;IACD;EACF;EACD;AACF;AACA;;;EASE;AACF;AACA;EACEgB,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAQ,GAAG,EAAE,KAAKvB;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,IAAI,EAAE,MAAb;QAAoB,EAAE,EAAC,MAAvB;QAA8B,KAAK,EAAG,KAAKK,KAAL,CAAWC,KAAjD;QACE,QAAQ,EAAI,KAAKE,QADnB;QAC6B,WAAW,EAAC;MADzC;QAAA;QAAA;QAAA;MAAA,QAHF,eAKE;QAAQ,IAAI,EAAG,QAAf;QAAwB,EAAE,EAAG,KAA7B;QAAmC,OAAO,EAAE,KAAKT,GAAjD;QACE,QAAQ,EAAI,KAAKM,KAAL,CAAWE,WADzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AA3D+B;;AA8DlC,eAAeX,GAAf"},"metadata":{},"sourceType":"module"}